@model DROP.Models.AccountViewModel

@{
    if (Session["accID"] == null)
    { }

    else if (Session["test"] == null)
    {
        Response.Redirect("~/Home/AdminPage");
    }

    else if (Session["test"] != null)
    {
        Response.Redirect("~/Home/MainPage");
    }

}

<hr />
<h2>LOG IN</h2>
<h1> </h1>

<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("Authenticate", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.username, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.username, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.username, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-10" style="margin:auto">
                    <label class="text-danger"> @Html.DisplayFor(model => model.LogErrorMsg) </label>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Log in" class="btn btn-primary btn-block" />
                    </div>
                </div>
            }
        </section>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}